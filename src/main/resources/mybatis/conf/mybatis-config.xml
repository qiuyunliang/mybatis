<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- resource指定配置文件优先级高于下列属性值，SqlSessionFactoryBuilder.build传递的属性优先级最高 -->
    <properties resource="mybatis/conf/mybatis-config.properties">
        <property name="username" value="root"/>
        <property name="password" value="mysql"/>
    </properties>
    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>  <!-- 指定 MyBatis 所用日志的具体实现，未指定时将自动查找。 -->
        <setting name="logPrefix" value="STDOUT_LOGGING"/>  <!-- 指定 MyBatis 增加到日志名称的前缀。 -->
        <setting name="useGeneratedKeys" value="true"/>  <!-- 允许JDBC支持生成的键，需要驱动支持。 -->
        <setting name="cacheEnabled" value="true"/>  <!-- 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存。 -->
        <setting name="lazyLoadingEnabled" value="true"/>  <!-- 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 -->
        <setting name="multipleResultSetsEnabled" value="true"/>  <!-- 是否允许单一语句返回多结果集（需要驱动支持）。 -->
        <setting name="useColumnLabel" value="true"/>  <!-- 使用列标签代替列名。 -->
        <setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>
        <setting name="defaultStatementTimeout" value="25"/>  <!-- 设置超时时间，它决定驱动等待数据库响应的秒数。 -->
        <setting name="defaultFetchSize" value="100"/>  <!-- 为驱动的结果集获取数量（fetchSize）设置一个提示值。此参数只可以在查询设置中被覆盖。 -->
        <setting name="safeRowBoundsEnabled" value="false"/>  <!-- 允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为 false。 -->
        <setting name="safeResultHandlerEnabled" value="false"/>  <!-- 允许在嵌套语句中使用分页（ResultHandler）。如果允许使用则设置为 false。 -->
        <setting name="mapUnderscoreToCamelCase" value="false"/>  <!-- 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名A_COLUMN到Java属性名aColumn的类似映射。 -->
        <setting name="localCacheScope" value="SESSION"/>  <!-- 	MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 -->
        <setting name="jdbcTypeForNull" value="OTHER"/>  <!--  当没有为参数提供特定的JDBC类型时，为空值指定JDBC类型。常用值：NULL, VARCHAR 或 OTHER。 -->
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>  <!-- 指定哪个对象的方法触发一次延迟加载。 -->
        <!-- 指定MyBatis应如何自动映射列到字段或属性。NONE表示取消自动映射；PARTIAL只会自动映射没有定义嵌套结果集映射的结果集。FULL会自动映射任意复杂的结果集（无论是否嵌套）。 -->
        <setting name="autoMappingBehavior" value="PARTIAL"/>
        <!-- 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新。 -->
        <setting name="defaultExecutorType" value="SIMPLE"/>
    </settings>
    <!-- 配置类型别名，减少类完全限定名的拼写 -->
    <typeAliases>
        <package name="me.chiu.demo.entity"/> <!-- 在包名下面搜索需要的Java Bean，没有注解的情况下会使用Bean的首字母小写的非限定类名来作为它的别名，若有注解则别名为其注解值。 -->
    </typeAliases>
    <!-- 类型处理器，在*Mapper.xml文件中使用typeHandler=... -->
    <typeHandlers>
        <typeHandler handler="me.chiu.demo.dao.handler.MoneyTypeHandler"/>
    </typeHandlers>
    <!-- 环境配置 -->
    <environments default="development">
        <environment id="development">
            <!-- 事务管理器 -->
            <transactionManager type="JDBC"/>
            <!-- 数据源 -->
            <dataSource type="POOLED">
                <!-- 占位符对应的配置信息从mybatis-config.properties、mybatis-config.xml的properties中元素或SqlSessionFactoryBuilder.build传参中获取 -->
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <!-- 映射器 -->
    <mappers>
        <!-- 使用相对于类路径的资源引用 -->
        <mapper resource="mybatis/mapper/DeviceMapper.xml"/>
        <!-- 使用映射器接口实现类的完全限定类名 -->
        <mapper class="me.chiu.demo.dao.mapper.UserMapper"/>
        <!-- 将包内的映射器接口实现全部注册为映射器 -->
        <!--<package name="me.chiu.demo.dao.mapper"/>-->
    </mappers>
</configuration>
